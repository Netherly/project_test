import React, { useState } from 'react';
import '../../styles/LogEntryDetails.css';


const LogEntryDetail = ({ entry, onClose, onDelete, onDuplicate }) => {
    
    const [showOptionsMenu, setShowOptionsMenu] = useState(false);

    if (!entry) {
        return null;
    }

    const handleMenuToggle = () => {
        setShowOptionsMenu(prev => !prev);
    };

    const handleDeleteClick = () => {
        if (window.confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å "${entry.description}"?`)) {
            onDelete(entry.id);
            onClose(); 
        }
        setShowOptionsMenu(false); 
    };

    const handleDuplicateClick = () => {
        onDuplicate(entry);
        onClose(); 
        setShowOptionsMenu(false); 
    };

    return (
        <div className="log-entry-details-overlay">
            <div className="log-entry-details-modal">
                <div className="log-entry-details-header">
                    <h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø–∏—Å–∏</h2>
                    <div className="log-entry-details-actions">
                        
                        <button className="options-button" onClick={handleMenuToggle}>
                            &#x22EF; 
                        </button>
                        
                        {showOptionsMenu && (
                            <div className="options-menu">
                                <button className="menu-item" onClick={handleDuplicateClick}>–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å</button>
                                <button className="menu-item delete-item" onClick={handleDeleteClick}>–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å</button>
                            </div>
                        )}
                        
                        <button className="modal-close-button" onClick={onClose}>&times;</button>
                    </div>
                </div>

                <div className="log-entry-details-content">
                    <h3>üìÑ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏</h3>
                    <p className="details-description">"{entry.description}"</p>
                    <p>
                        <span>üßë‚Äçüíª {entry.executorRole}</span>
                        <span>‚úâÔ∏è {entry.email}</span>
                    </p>
                    <p>
                        <span>üóìÔ∏è {entry.workDate}</span>
                        <span>‚è∞ {entry.startTime} - {entry.endTime}</span>
                        <span>üïí {entry.hours}</span>
                    </p>
                    <p>{entry.workDone}</p>

                    <h3>üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å</h3>
                    <p>
                        <span>‚Ññ –∑–∞–∫–∞–∑–∞</span>
                        <span>{entry.orderNumber}</span>
                    </p>
                    <p>
                        <span>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Ä–æ–ª—å</span>
                        <span>{entry.executorRole}</span>
                    </p>
                    <p>
                        <span>–î–∞—Ç–∞ —Ä–∞–±–æ—Ç—ã</span>
                        <span>{entry.workDate}</span>
                    </p>
                    <p>
                        <span>–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞</span>
                        <span>{entry.startTime}</span>
                    </p>
                    <p>
                        <span>–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è</span>
                        <span>{entry.endTime}</span>
                    </p>
                    <p>
                        <span>–ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ?</span>
                        <span>{entry.workDone}</span>
                    </p>
                </div>
            </div>
        </div>
    );
};

export default LogEntryDetail;