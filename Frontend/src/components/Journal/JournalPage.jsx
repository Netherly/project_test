import React, { useState, useEffect } from "react";
import Sidebar from "../Sidebar";
import "./JournalPage.css";
import LogEntryDetails from "./LogEntryDetail";
import AddLogEntryForm from "./AddLogEntryForm"; 

const JournalPage = () => {
    const initialLogEntries = [
        {
            id: 1,
            description: "'GSSE'. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á –∑–∞ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º",
            orderNumber: "2416",
            executorRole: "Frontend Developer",
            workDate: "2 –∏—é–ª—è 2025 –≥.",
            startTime: "12:00",
            endTime: "17:51",
            hours: "5:51:00",
            workDone: "–î–æ–¥–µ–ª–∞–Ω –±–ª–æ–∫ —Å –Ω–∞–º–∏ —Ä–∞–±–æ—Ç–∞—é—Ç, —Å–¥–µ–ª–∞–Ω –∞–¥–∞–ø—Ç–∏–≤ —ç—Ç–æ–≥–æ –±–ª–æ–∫–∞. –î–æ–±–∞–≤–∏–ª –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –±–ª–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –≤–∏–¥ —Ç–µ–∫—Å—Ç–∞ –≤ –Ω–æ–≤–æ–º –±–ª–æ–∫–µ –≤ –∞–¥–∞–ø—Ç–∏–≤e. –í—ã–≥—Ä—É–∑–∏–ª –±–ª–æ–∫ —Å –Ω–∞–º–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–µ—Ä–µ–≤–µ–ª –∑–∞–≥–æ–ª–æ–≤–æ–∫.",
            email: "alexanderlisyak@gmail.com"
        },
        {
            id: 2,
            description: "'CRM GSSE'. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ CRM —Å–∏—Å—Ç–µ–º—ã",
            orderNumber: "2417",
            executorRole: "Frontend Developer",
            workDate: "1 –∏—é–ª—è 2025 –≥.",
            startTime: "-",
            endTime: "-",
            hours: "0:00:00",
            workDone: "–û—Ç—á–µ—Ç –∑–∞ –ò—é–ª—å 2025. Https://...",
            email: "alexanderlisyak@gmail.com"
        },
        {
            id: 3,
            description: "'CRM GSSE'. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ CRM —Å–∏—Å—Ç–µ–º—ã",
            orderNumber: "2417",
            executorRole: "Frontend Developer",
            workDate: "1 –∏—é–ª—è 2025 –≥.",
            startTime: "-",
            endTime: "-",
            hours: "0:00:00",
            workDone: "–û—Ç—á–µ—Ç –∑–∞ –ò—é–ª—å 2025. Https://...",
            email: "alexanderlisyak@gmail.com"
        },
        {
            id: 4,
            description: "'CRM GSSE'. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ CRM —Å–∏—Å—Ç–µ–º—ã",
            orderNumber: "2417",
            executorRole: "Frontend Developer",
            workDate: "1 –∏—é–ª—è 2025 –≥.",
            startTime: "-",
            endTime: "-",
            hours: "0:00:00",
            workDone: "–û—Ç—á–µ—Ç –∑–∞ –ò—é–ª—å 2025. Https://...",
            email: "alexanderlisyak@gmail.com"
        },
        {
            id: 5,
            description: "'CRM GSSE'. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ CRM —Å–∏—Å—Ç–µ–º—ã",
            orderNumber: "2417",
            executorRole: "Frontend Developer",
            workDate: "1 –∏—é–ª—è 2025 –≥.",
            startTime: "-",
            endTime: "-",
            hours: "0:00:00",
            workDone: "–û—Ç—á–µ—Ç –∑–∞ –ò—é–ª—å 2025. Https://...",
            email: "alexanderlisyak@gmail.com"
        },
        {
            id: 6,
            description: "'CRM GSSE'. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ CRM —Å–∏—Å—Ç–µ–º—ã",
            orderNumber: "2417",
            executorRole: "Frontend Developer",
            workDate: "1 –∏—é–ª—è 2025 –≥.",
            startTime: "-",
            endTime: "-",
            hours: "0:00:00",
            workDone: "–û—Ç—á–µ—Ç –∑–∞ –ò—é–ª—å 2025. Https://...",
            email: "alexanderlisyak@gmail.com"
        },
    ];

    const [logEntries, setLogEntries] = useState(initialLogEntries);
    const [selectedEntry, setSelectedEntry] = useState(null);
    const [showAddForm, setShowAddForm] = useState(false); 

    const [searchOrderNumber, setSearchOrderNumber] = useState("");
    const [searchWorkDate, setSearchWorkDate] = useState("");
    const [searchWorkDone, setSearchWorkDone] = useState("");
    const [showAdvancedSearch, setShowAdvancedSearch] = useState(false);

    const filterLogEntries = () => {
        let filtered = initialLogEntries.filter(entry => {
            const matchesOrderNumber = searchOrderNumber
                ? entry.orderNumber.toLowerCase().includes(searchOrderNumber.toLowerCase())
                : true;

            const matchesWorkDate = searchWorkDate
                ? entry.workDate.toLowerCase().includes(searchWorkDate.toLowerCase())
                : true;

            const matchesWorkDone = searchWorkDone
                ? entry.workDone.toLowerCase().includes(searchWorkDone.toLowerCase())
                : true;

            return matchesOrderNumber && matchesWorkDate && matchesWorkDone;
        });
        setLogEntries(filtered);
    };

    const handleResetSearch = () => {
        setSearchOrderNumber("");
        setSearchWorkDate("");
        setSearchWorkDone("");
        setLogEntries(initialLogEntries);
    };

    useEffect(() => {
        filterLogEntries();
    }, [searchOrderNumber, searchWorkDate, searchWorkDone]); 

    const handleRowClick = (entry) => {
        setSelectedEntry(entry);
    };

    const handleCloseDetails = () => {
        setSelectedEntry(null);
    };

    
    const handleAddLogEntry = (newEntry) => {
        setLogEntries(prevEntries => [{ id: Date.now(), ...newEntry }, ...prevEntries]);
        setShowAddForm(false); 
    };

    return (
        <div className="journal-page">
            <Sidebar />
            <div className="journal-page-main-container">
                <header className="journal-header-container">
                    <h1 className="journal-title">–ñ—É—Ä–Ω–∞–ª</h1>
                    <button className="add-entry-button" onClick={() => setShowAddForm(true)}>
                        ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
                    </button>
                    <div className="search-container">
                        <div className="main-search-bar">
                            <span className="search-icon">üîç</span>
                            <input
                                type="text"
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞, –¥–∞—Ç—É –∏–ª–∏ —Å–ª–æ–≤–æ"
                                className="main-search-input"
                                value={`${searchOrderNumber} ${searchWorkDate} ${searchWorkDone}`.trim()}
                                onChange={(e) => {
                                    
                                }}
                                onFocus={() => setShowAdvancedSearch(true)}
                            />
                            <span
                                className="toggle-advanced-search"
                                onClick={() => setShowAdvancedSearch(!showAdvancedSearch)}
                            >
                                {showAdvancedSearch ? "‚ñ≤" : "‚ñº"}
                            </span>
                        </div>

                        {showAdvancedSearch && (
                            <div className="advanced-search-fields">
                                <div className="search-field-group">
                                    <label>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞</label>
                                    <input
                                        type="text"
                                        placeholder="–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞"
                                        value={searchOrderNumber}
                                        onChange={(e) => setSearchOrderNumber(e.target.value)}
                                    />
                                    <span className="clear-input" onClick={() => setSearchOrderNumber("")}>‚úñÔ∏è</span>
                                </div>
                                <div className="search-field-group">
                                    <label>–î–µ–Ω—å</label>
                                    <input
                                        type="text"
                                        placeholder="–£–∫–∞–∂–∏—Ç–µ –¥–µ–Ω—å"
                                        value={searchWorkDate}
                                        onChange={(e) => setSearchWorkDate(e.target.value)}
                                    />
                                    <span className="clear-input" onClick={() => setSearchWorkDate("")}>‚úñÔ∏è</span>
                                </div>
                                <div className="search-field-group">
                                    <label>–ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ?</label>
                                    <input
                                        type="text"
                                        placeholder="–£–∫–∞–∂–∏—Ç–µ —Å–ª–æ–≤–∞"
                                        value={searchWorkDone}
                                        onChange={(e) => setSearchWorkDone(e.target.value)}
                                    />
                                    <span className="clear-input" onClick={() => setSearchWorkDone("")}>‚úñÔ∏è</span>
                                </div>

                                <div className="search-buttons">
                                    <button className="reset-button" onClick={handleResetSearch}>–°–±—Ä–æ—Å–∏—Ç—å</button>
                                    <button className="search-button" onClick={filterLogEntries}>–ü–æ–∏—Å–∫</button>
                                </div>
                            </div>
                        )}
                    </div>
                </header>

                <div className="journal-table-container">
                    <table className="journal-table">
                        <thead>
                            <tr>
                                <th>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è</th>
                                <th>–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞</th>
                                <th>‚Ññ –∑–∞–∫–∞–∑–∞</th>
                                <th>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Ä–æ–ª—å</th>
                                <th>–î–∞—Ç–∞ —Ä–∞–±–æ—Ç—ã</th>
                                <th>–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞</th>
                                <th>–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è</th>
                                <th>–ß–∞—Å—ã</th>
                                <th>–ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ?</th>
                            </tr>
                        </thead>
                        <tbody>
                            {logEntries.map((entry) => (
                                <tr key={entry.id} onClick={() => handleRowClick(entry)} className="journal-table-row">
                                    <td className="status-icon-cell">‚öôÔ∏è</td>
                                    <td>{entry.description}</td>
                                    <td>{entry.orderNumber}</td>
                                    <td>{entry.executorRole}</td>
                                    <td>{entry.workDate}</td>
                                    <td>{entry.startTime}</td>
                                    <td>{entry.endTime}</td>
                                    <td>{entry.hours}</td>
                                    <td>{entry.workDone}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
            </div>

            {selectedEntry && (
                <LogEntryDetails entry={selectedEntry} onClose={handleCloseDetails} />
            )}

            
            {showAddForm && (
                <AddLogEntryForm
                    onAdd={handleAddLogEntry}
                    onClose={() => setShowAddForm(false)}
                />
            )}
        </div>
    );
};

export default JournalPage;
