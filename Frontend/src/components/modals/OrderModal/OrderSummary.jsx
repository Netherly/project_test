import React from 'react';
import { useFormContext } from 'react-hook-form';
import '../../../styles/OrderSummary.css';


const getInitials = (name = '') => {
    if (!name) return '?';
    const words = name.split(' ');
    if (words.length > 1 && words[0] && words[1]) {
        return words[0][0] + words[1][0];
    }
    return name.substring(0, 2).toUpperCase();
};

const formatNumber = (num) => {
    if (typeof num !== 'number' || isNaN(num)) {
        return '0';
    }
    return num.toLocaleString('ru-RU', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
};


const OrderSummary = () => {
    const { watch } = useFormContext();
    const formData = watch();

    
    const {
        id,
        orderDescription = '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è',
        client_company = '–ö–ª–∏–µ–Ω—Ç –Ω–µ —É–∫–∞–∑–∞–Ω', 
        performers = [],
        budget = 0,
        appealDate,
        plannedStartDate,
        plannedFinishDate,
        work_log = [], 
        techTags = [], 
        stage = '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω', 
        tags = [] 
    } = formData;

    
    const totalBudget = parseFloat(budget) || 0;

    const totalExecutorCost = performers.reduce((acc, performer) => {
        const cost = parseFloat(performer.orderSum) || 0; 
        return acc + cost;
    }, 0);

    const profit = totalBudget - totalExecutorCost;
    const profitability = totalBudget > 0 ? (profit / totalBudget) * 100 : 0;
    const profitClass = profit > 0 ? 'positive' : profit < 0 ? 'negative' : 'zero';

    
    const totalMinutes = work_log.reduce((acc, entry) => {
        if (!entry.hours || typeof entry.hours !== 'string') return acc;
        const parts = entry.hours.split(':');
        const hours = parseInt(parts[0], 10) || 0;
        const minutes = parseInt(parts[1], 10) || 0;
        return acc + (hours * 60) + minutes;
    }, 0);
    
    const totalHoursSpent = Math.floor(totalMinutes / 60);
    const remainingMinutes = totalMinutes % 60;
    const formattedTime = `${totalHoursSpent} —á ${remainingMinutes} –º–∏–Ω`;

    return (
        <div className="order-summary-tab">
            <div className="summary-grid">
                
                
                <div className="summary-card main-info-card">
                    <div className="summary-card-header">
                        <span role="img" aria-label="info">‚ÑπÔ∏è</span>
                        <h3>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                    </div>
                    <div className="summary-card-body">
                        <h2>{orderDescription}</h2>
                        <p><strong>–ó–∞–∫–∞–∑:</strong> #{id || '–ù–æ–≤—ã–π'}</p>
                        <p><strong>–ö–ª–∏–µ–Ω—Ç:</strong> {client_company}</p>
                        
                        <div className="stage-info">
                            <strong>–°—Ç–∞—Ç—É—Å:</strong>
                            <span className="stage-badge">{stage}</span>
                        </div>
                        
                        {tags.length > 0 && (
                            <div className="tags-container">
                                {tags.map(tag => <span key={tag} className="status-tag">{tag}</span>)}
                            </div>
                        )}
                    </div>
                </div>

                
                <div className="summary-card finance-card">
                    <div className="summary-card-header">
                        <span role="img" aria-label="money">üí∞</span>
                        <h3>–§–∏–Ω–∞–Ω—Å—ã</h3>
                    </div>
                    <div className="summary-card-body">
                        <div className="finance-item">
                            <span>–ë—é–¥–∂–µ—Ç:</span>
                            <span className="finance-value budget">{formatNumber(totalBudget)} ‚Ç¥</span>
                        </div>
                        <div className="finance-item">
                            <span>–†–∞—Å—Ö–æ–¥—ã –Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π:</span>
                            <span className="finance-value cost">{formatNumber(totalExecutorCost)} ‚Ç¥</span>
                        </div>
                        <hr className="finance-divider" />
                        <div className="finance-item total">
                            <span>–ü—Ä–∏–±—ã–ª—å:</span>
                            <span className={`finance-value ${profitClass}`}>
                                {formatNumber(profit)} ‚Ç¥
                            </span>
                        </div>
                        <div className="profitability-bar-container">
                             <div 
                                 className={`profitability-bar ${profitClass}`}
                                 style={{ width: `${Math.min(Math.abs(profitability), 100)}%` }}
                             ></div>
                        </div>
                        <div className="profitability-text">
                            –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å: {profitability.toFixed(1)}%
                        </div>
                    </div>
                </div>

                
                <div className="summary-card time-tracking-card">
                    <div className="summary-card-header">
                        <span role="img" aria-label="clock">‚è±Ô∏è</span>
                        <h3>–ó–∞—Ç—Ä–∞—á–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–∏</h3>
                    </div>
                    <div className="summary-card-body">
                        <div className="total-time-display">
                            {formattedTime}
                        </div>
                        <p className="time-tracking-subtitle">
                            –í—Å–µ–≥–æ –ø–æ –∂—É—Ä–Ω–∞–ª—É —Ä–∞–±–æ—Ç
                        </p>
                    </div>
                </div>

               
                <div className="summary-card tech-stack-card">
                    <div className="summary-card-header">
                        <span role="img" aria-label="tools">‚öôÔ∏è</span>
                        <h3>–°—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π</h3>
                    </div>
                    <div className="summary-card-body">
                        <div className="summary-tech-tags-container">
                            {techTags.length > 0 ? techTags.map(tag => (
                                <span key={tag} className="summary-tech-tag">{tag}</span>
                            )) : (
                                <p className="no-data-placeholder">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã</p>
                            )}
                        </div>
                    </div>
                </div>

                
                <div className="summary-card participants-card">
                    <div className="summary-card-header">
                        <span role="img" aria-label="team">üë•</span>
                        <h3>–£—á–∞—Å—Ç–Ω–∏–∫–∏ ({performers.length})</h3>
                    </div>
                    <div className="summary-card-body">
                        <ul className="participants-list">
                            {performers.length > 0 ? performers.map((p, index) => (
                                <li key={p.id || index} className="participant-item">
                                    <div className="avatar" style={{ backgroundColor: `#${(Math.abs(p.performer.split("").reduce((a,b)=>{a=((a<<5)-a)+b.charCodeAt(0);return a&a},0))%16777215).toString(16).padStart(6, '0')}` }}>
                                        {getInitials(p.performer)}
                                    </div>
                                    <div className="participant-info">
                                        <span className="participant-name">{p.performer}</span>
                                        
                                        <span className="participant-role">{p.performerRole}</span>
                                    </div>
                                </li>
                            )) : (
                                <p className="no-data-placeholder">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã</p>
                            )}
                        </ul>
                    </div>
                </div>

                
                <div className="summary-card dates-card">
                     <div className="summary-card-header">
                        <span role="img" aria-label="calendar">üóìÔ∏è</span>
                        <h3>–í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã</h3>
                    </div>
                    <div className="summary-card-body">
                        <div className="date-item">
                            <strong>–î–∞—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è:</strong>
                            <span>{appealDate || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                        </div>
                         <div className="date-item">
                            <strong>–ü–ª–∞–Ω. —Å—Ç–∞—Ä—Ç:</strong>
                            <span>{plannedStartDate || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                        </div>
                         <div className="date-item">
                            <strong>–ü–ª–∞–Ω. —Ñ–∏–Ω–∏—à:</strong>
                            <span>{plannedFinishDate || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    );
};

export default OrderSummary;