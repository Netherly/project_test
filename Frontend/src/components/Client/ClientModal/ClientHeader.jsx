import React, { useState, useRef, useEffect, useCallback } from 'react';
import { useFormContext } from 'react-hook-form';
import Tag from './Tag';
import defaultAvatar from '../../../assets/avatar-placeholder.svg';
import styles from './ClientHeader.module.css';

/**
 * –®–∞–ø–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞: –∏–º—è, –Ω–∏–∫, —Ç–µ–≥–∏, –∞–≤–∞—Ç–∞—Ä, –º–µ–Ω—é ¬´‚ãÆ¬ª ‚Üí ¬´–£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞¬ª, –∫—Ä–µ—Å—Ç–∏–∫.
 */
export default function ClientHeader({
  onClose,
  onDelete = () => {}  // default no-op, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –ø—É–Ω–∫—Ç
}) {
  /* -------- –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã -------- */
  const { watch }   = useFormContext();
  const name        = watch('name')?.trim()            || '–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞';
  const nick        = watch('messenger_name')?.trim()  || '@username';
  const avatarSrc   = watch('photo_link')?.trim()      || defaultAvatar;
  const tags        = watch('tags')?.length ? watch('tags') : ['–ù–æ–≤—ã–π'];

  /* -------- —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é -------- */
  const [open, setOpen] = useState(false);
  const menuRef = useRef(null);

  /* –∫–ª–∏–∫ –≤–Ω–µ –º–µ–Ω—é */
  useEffect(() => {
    const outside = e => {
      if (menuRef.current && !menuRef.current.contains(e.target)) {
        setOpen(false);
      }
    };
    document.addEventListener('mousedown', outside);
    return () => document.removeEventListener('mousedown', outside);
  }, []);

  /* Esc –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è */
  const escClose = useCallback(e => {
    if (e.key === 'Escape') setOpen(false);
  }, []);
  useEffect(() => {
    document.addEventListener('keydown', escClose);
    return () => document.removeEventListener('keydown', escClose);
  }, [escClose]);

  /* ======== JSX ======== */
  return (
    <div className={styles.clientHeader}>
      {/* –∏–Ω—Ñ–æ */}
      <div className={styles.info}>
        <h2 className={name === '–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞' ? styles.placeholder : undefined}>
          {name}
        </h2>
        <span className={nick === '@username' ? styles.placeholder : undefined}>
          {nick}
        </span>
        <div className={styles.tags}>
          {tags.slice(0, 4).map(tag => (
            <Tag key={typeof tag === 'string' ? tag : tag.name} tag={tag} />
          ))}
          {tags.length > 4 && (
            <div className={styles.moreTags}>+{tags.length - 4}</div>
          )}
        </div>
      </div>

      {/* –∞–≤–∞—Ç–∞—Ä */}
      <div className={styles.avatarWrap}>
        <img src={avatarSrc} alt="–ê–≤–∞—Ç–∞—Ä –∫–ª–∏–µ–Ω—Ç–∞" className={styles.avatar} />
      </div>

      {/* –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className={styles.actions} ref={menuRef}>
        <button
          className={styles.btn}
          type="button"
          aria-haspopup="menu"
          aria-expanded={open}
          onClick={() => setOpen(o => !o)}
        >
          ‚ãÆ
        </button>

        <ul
          className={`${styles.dropdown} ${open ? styles.show : ''}`}
          role="menu"
        >
          
          <li role="menuitem" onClick={onDelete}>
            üóë –£–¥–∞–ª–∏—Ç—å {name}
          </li>
        </ul>

        <button
          className={styles.btn}
          type="button"
          onClick={onClose}
          aria-label="–ó–∞–∫—Ä—ã—Ç—å"
        >
          √ó
        </button>
      </div>
    </div>
  );
}
